spring:
  application:
    name: backend-service
  output:
    ansi:
      enabled: DETECT
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:postgres}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASS:postgres}
    hikari:
      max-lifetime: ${HIKARI_CP_MAX_LIFETIME:600000}
      maximum-pool-size: ${HIKARI_CP_MAX_POOL_SIZE:3}
      leak-detection-threshold: ${HIKARI_CP_LEAK_DETECT_THRESHOLD:60000}
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        jdbc:
          time_zone: UTC
        dialect: org.hibernate.dialect.PostgreSQL82Dialect
    show-sql: ${JPA_SHOW_SQL:true}
    open-in-view: true
  profiles:
    active: ${APP_ENV:dev}
  flyway:
    schemas: public
    out-of-order: ${FLYWAY_OUT_OF_ORDER:false}
    validate-on-migrate: true

bots:
  telegram:
    name: ${TELEGRAM_BOT_NAME:almaty_partypal_bot}
    token: ${TELEGRAM_BOT_TOKEN:5888573729:AAHkO5pn7EO2LgGs_-mTtBiEYuEAvjqCZZM}
    paymentToken: ${TELEGRAM_BOT_PAYMENT_TOKEN:5420394252:TEST:543267}
eureka:
  client:
    enabled: ${EUREKA_CLIENT_ENABLED:false}
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL:http://localhost:8761/eureka/}
    fetch-registry: true

microservice-url:
  translator:
    url: ${MICROSERVICE-URL_TRANSLATOR_URL:http://localhost:8080}
server:
  port: 8888
  tomcat:
    uri-encoding: UTF-8
geocoder:
  url: ${GEOCODER_URL:https://geocode-maps.yandex.ru/1.x}
  key: ${GEOCODER_KEY:35c221c7-b4ab-4ddc-8a80-9346adac26cf}
